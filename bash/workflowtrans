#!/bin/bash

export PATH="$PATH:/opt/electriccloud/electriccommander/bin"
name=$(basename $0)
xpath=xpath

project="$1"
workflow="$2"

if [ -n "$workflow" ]
then
    ectool getStateDefinitions "$project" "$workflow" | $xpath -q -e '//response/stateDefinition/stateDefinitionName/text()' | while read state
    do
        echo $state
        ectool getTransitionDefinitions "$project" "$workflow" "$state" | $xpath -q -e '//response/transitionDefinition/transitionDefinitionName/text()' 2>/dev/null | while read transition
        do
            target=$(ectool getProperty "/projects[$project]/workflowDefinitions[$workflow]/stateDefinitions[$state]/transitionDefinitions[$transition]/targetState")
            echo -e "\t$transition --> $target"
        done
    done
else
    ectool getWorkflowDefinitions "$project" | $xpath -q -e '//response/workflowDefinition/workflowDefinitionName/text()' 2>/dev/null
fi

# #!/dis/sh
# project = $1
# workflow = $2
# 
# if {no $workflow} {
# 	ectool getWorkflowDefinitions $"project | os xpath -q -e '//response/workflowDefinition/workflowDefinitionName/text()' >[2]/dev/null
# 	exit 0
# }
# 
# ifs = '
# '; apply {
# 	state = $1
# 	echo $state
# 	ifs = '
# '
# 	transitions = `{ifs = '
# '; ectool getTransitionDefinitions $"project $"workflow $state | os xpath -q -e '//response/transitionDefinition/transitionDefinitionName/text()' >[2]/dev/null}
# 	apply {
# 		transition = $1
# 		target = `{ectool getProperty '/projects['^$project^']/workflowDefinitions['^$workflow^']/stateDefinitions['^$state^']/transitionDefinitions['^$transition^']/targetState'}
# 		echo $transition 'â†’' $target | sed 's,^,	,'
# 	} $transitions
# } `{ifs = ' 	
# '; ectool getStateDefinitions $"project $"workflow | os xpath -q -e '//response/stateDefinition/stateDefinitionName/text()'}
# exit 0
