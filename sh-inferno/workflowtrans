#!/dis/sh
project = $1
workflow = $2

if {no $project} {
	echo 'usage: workflowtrans $"project ($"workflow)?
	Without $workflow, list all workflows in $project.'
	exit 1
}

if {no $workflow} {
	ectool getWorkflowDefinitions $"project | os xpath -q -e '//workflowDefinitionName/text()' >[2]/dev/null
	exit 0
}

fn transitionlines {
	proj = $1
	flow = $2
	state = $3
	trans = $4

	target = `{ectool getProperty '/projects['^$proj^']/workflowDefinitions['^$flow^']/stateDefinitions['^$state^']/transitionDefinitions['^$trans^']/targetState'}
	echo $trans 'â†’' $target | sed 's,^,	,'
}

subfn statetransitions {
	proj = $1
	flow = $2
	state = $3

	result = `{ectool getTransitionDefinitions $"proj $"flow $"state | os xpath -q -e '//transitionDefinitionName/text()' >[2]/dev/null}
}

fn procedureline {
	proj = $1
	flow = $2
	state = $3

	subproject = `{ectool getStateDefinition $"proj $"flow $"state | os xpath -q -e '//subproject/text()' >[2]/dev/null}
	subprocedure = `{ectool getStateDefinition $"proj $"flow $"state | os xpath -q -e '//subprocedure/text()' >[2]/dev/null}
	subworkflowDefinition = `{ectool getStateDefinition $"proj $"flow $"state | os xpath -q -e '//subworkflowDefinition/text()' >[2]/dev/null}

	if {! no $subprocedure} {
		if {no $subproject} {
			echo $state '('^$"subprocedure^')'
		} {
			echo $state '('^$"subproject^':'^$"subprocedure^')'
		}
	} {
		if {! no $subworkflowDefinition} {
			if {no $subproject} {
				echo $state '['^$"subworkflowDefinition^']'
			} {
				echo $state '['^$"subproject^':'^$"subworkflowDefinition^']'
			}
		} {
			echo $state
		}
	}
}

fn statelines {
	proj = $1
	flow = $2
	state = $3

	procedureline $"proj $"flow $"state
	apply {transitionlines $"proj $"flow $"state $"1} ${statetransitions $"proj $"flow $"state}
}

subfn workflowstates {
	proj = $1
	flow = $2

	result = `{ectool getStateDefinitions $"proj $"flow | os xpath -q -e '//stateDefinitionName/text()'}
}

ifs = '
'; apply {statelines $"project $"workflow $"1} ${workflowstates $"project $"workflow}
