#!/dis/sh
project = $1
workflow = $2

if {no $project} {
	echo 'usage: workflowtrans $"project ($"workflow)?
	Without $workflow, list all workflows in $project.'
	exit 1
}

if {no $workflow} {
	ectool getWorkflowDefinitions $"project | os xpath -q -e '//workflowDefinitionName/text()' >[2]/dev/null
	exit 0
}

ifs = '
'; apply {
	state = $1
	subproject = `{ectool getStateDefinition $"project $"workflow $"state | os xpath -q -e '//subproject/text()' >[2]/dev/null}
	subprocedure = `{ectool getStateDefinition $"project $"workflow $"state | os xpath -q -e '//subprocedure/text()' >[2]/dev/null}
	subworkflowDefinition = `{ectool getStateDefinition $"project $"workflow $"state | os xpath -q -e '//subworkflowDefinition/text()' >[2]/dev/null}

	if {! no $subprocedure} {
		if {no $subproject} {
			echo $state '('^$"subprocedure^')'
		} {
			echo $state '('^$"subproject^':'^$"subprocedure^')'
		}
	} {
		if {! no $subworkflowDefinition} {
			if {no $subproject} {
				echo $state '['^$"subworkflowDefinition^']'
			} {
				echo $state '['^$"subproject^':'^$"subworkflowDefinition^']'
			}
		} {
			echo $state
		}
	}

	ifs = '
'
	transitions = `{ifs = '
'; ectool getTransitionDefinitions $"project $"workflow $"state | os xpath -q -e '//transitionDefinitionName/text()' >[2]/dev/null}

	apply {
		transition = $1
		target = `{ectool getProperty '/projects['^$project^']/workflowDefinitions['^$workflow^']/stateDefinitions['^$state^']/transitionDefinitions['^$transition^']/targetState'}
		echo $transition 'â†’' $target | sed 's,^,	,'
	} $transitions
} `{ifs = ' 	
'; ectool getStateDefinitions $"project $"workflow | os xpath -q -e '//stateDefinitionName/text()'}
exit 0
